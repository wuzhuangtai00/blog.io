---
layout: post
title: '由ZJOI2015幻想乡战略游戏引起对动态点分治的思考'
date: 2016-1-11 17:17
comments: true
categories: 
---
<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default"></script>
故事要从去年的5月份说起。

当时窝在写QTree4...对着FullpowerX的代码写的..当时的写法是在点分树的每个点都向它到它到根的所有路径上的点连边。这样空间复杂度是

$$O(nlogn)$$

神奇的是..窝用这样的方法过了若干道动态点分都没有被卡。

今天机房众开始写动态点分。窝观摩了一下他们的代码..发现他们的写法和窝似乎不太一样...

窝当时心情非常感动。以为自己一直写的都是错的。后来看了下他们代码。发现自己的代码是相当于把每个点到它到根的所有路径上的边的距离预处理出来而已。所以看起来也不算错的很离谱啊(雾

于是又观摩了他们写这道题的方式.发现他们是在点分树上直接走。走到一个点计算它所有儿子的答案。然后朝答案小的那边走。

然而这种方法是错的。

考虑一颗长得像这样的原数![](http://7xoz7t.com1.z0.glb.clouddn.com/Point_DivideA.png)

并且它的点分树长得像这样![](http://7xoz7t.com1.z0.glb.clouddn.com/Point_DivideB.png)

假设点B是整棵树的带权重心。那么窝们在从上向下走的时候，走到A想向C的时候，就有可能被卡住得到错误的答案。

所以窝们可以得出这样的结论:

由于点分树改变了整棵树的形态。所以点分树只能统计可减性的答案。对于一些其他的性质(例如上题中的带权重心),还是得在原树上干。

以及我校小哥智商感人。
